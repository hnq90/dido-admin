'use strict';

/* Controllers */
angular.module('dido.controllers', [])
    .controller('DashboardCtrl', ['$scope', 'DashboardInfo',
        function ($scope, DashboardInfo) {
            var datas = DashboardInfo.get(function () {
                var x = datas["data"];
                $scope.num_user = x.user.num_user;
                $scope.num_place = x.place.num_place;
                $scope.num_question = x.question.num_question;
                $scope.num_answer = x.answer.num_answer;
                $scope.num_user_7_days = x.user.num_user_7_days.toString();
                $scope.num_place_7_days = x.place.num_place_7_days.toString();
                $scope.num_question_7_days = x.question.num_question_7_days.toString();
                $scope.num_answer_7_days = x.answer.num_answer_7_days.toString();
                $scope.num_user_30_days = x.user.num_user_30_days;
                $scope.num_place_30_days = x.place.num_place_30_days;
                $scope.num_question_30_days = x.question.num_question_30_days;
                $scope.num_answer_30_days = x.answer.num_answer_30_days;
            });
        }
    ])
    .controller('UserCtrl', ['$scope', 'UsersAPI', 'UserAPI', '$location',
        function ($scope, UsersAPI, UserAPI, $location) {
            $scope.main_user_page = true;
            $scope.users = {};

            $scope.editUser = function (userId) {
                $location.path('/user-detail/' + userId);
            };

            $scope.deleteUser = function (userId) {
                if (confirm("Do you want to delete this user?")) {
                    UserAPI.delete({ id: userId }, function (data) {
                        // Success
                        UsersAPI.query(function (data2) {
                            $scope.users = data2["data"];
                        });
                    }, function (error) {
                        // Error
                        $scope.has_error = true;
                        $scope.errors = error.data.message;
                    });
                }
            };

            $scope.createUser = function () {
                $location.path('/user-creation');
            };

            $scope.searchUser = function() {
                $location.path('/user-search');
            };

            UsersAPI.query({}, function (value, headers) {
                // Success
                $scope.users = value["data"];

                var res_headers = headers();

                $scope.max_size = 5;
                $scope.total_page = parseInt(res_headers["x-total-pages"]) || 0;
                $scope.total_items = parseInt(res_headers["x-total"]) || 0;
                $scope.current_page = parseInt(res_headers["x-page"]) || 0;

                $scope.$watch('current_page', function(newPage){
                    if ($scope.current_page > 0)
                        changePage(newPage);
                });
            }, function (response) {
                // Error
            });

            var changePage = function(page) {
                UsersAPI.query({page: page}, function (value, headers) {
                    // Success
                    $scope.users = value["data"];
                }, function (response) {
                    // Error
                });
            }
        }
    ])
    .controller('UserSearchCtrl', ['$scope', 'UsersAPI', 'UserAPI', 'UserSearchAPI', '$location',
        function ($scope, UsersAPI, UserAPI, UserSearchAPI, $location) {
            $scope.main_user_page = false;
            $scope.search_user_page = true;
            $scope.users = {};

            $scope.listUser = function() {
                $location.path('/user');
            };

            $scope.editUser = function (userId) {
                $location.path('/user-detail/' + userId);
            };

            $scope.deleteUser = function (userId) {
                if (confirm("Do you want to delete this user?")) {
                    UserAPI.delete({ id: userId }, function (data) {
                        // Success
                        UsersAPI.query(function (data2) {
                            $scope.users = data2["data"];
                        });
                    }, function (error) {
                        // Error
                        $scope.has_error = true;
                        $scope.errors = error.data.message;
                    });
                }
            };

            $scope.searchUser = function(keyword) {
                keyword = keyword == undefined ? '*':keyword;
                UserSearchAPI.query({keyword: keyword}, function (value, headers) {
                    // Success
                    $scope.users = value["data"];

                    var res_headers = headers();
                    $scope.max_size = 5;
                    $scope.total_page = parseInt(res_headers["x-total-pages"]) || 0;
                    $scope.total_items = parseInt(res_headers["x-total"]) || 0;
                    $scope.current_page = parseInt(res_headers["x-page"]) || 0;

                    $scope.$watch('current_page', function(newPage){
                        if ($scope.current_page > 0)
                            changePage(newPage, keyword);
                    });
                }, function (response) {
                    // Error
                });
            };

            var changePage = function(page, keyword) {
                UserSearchAPI.query({keyword: keyword, page: page}, function (value, headers) {
                    // Success
                    $scope.users = value["data"];
                }, function (response) {
                    // Error
                });
            }
        }
    ])
    .controller('UserDetailCtrl', ['$scope', '$routeParams', 'UserAPI', '$location',
        function ($scope, $routeParams, UserAPI, $location) {
            var user = UserAPI.show({id: $routeParams.id}, function () {
                $scope.user = user["data"];
            });
            $scope.form_state = false;

            $scope.updateUser = function (id, state) {
                if (state == true) {
                    if (confirm("Do you want to update?")) {
                        var current_info = $scope.user;
                        UserAPI.update(current_info, function (data) {
                            // Success
                            $location.path('/user');
                        }, function (error) {
                            // Error
                            $scope.has_error = true;
                            $scope.errors = error.data.message;
                        });
                    }
                } else {
                    alert("User info isn't changed");
                }
            };

            $scope.cancel = function (state) {
                if (state == true) {
                    if (confirm("Form changed. Do you want to discard changes?")) {
                        $location.path('/user');
                    }
                } else {
                    $location.path('/user');
                }
            };
        }
    ])
    .controller('UserCreationCtrl', ['$scope', 'UserCreationAPI', '$location',
        function ($scope, UserCreationAPI, $location) {

            $scope.createUser = function (state) {
                if (state == true) {
                    if (confirm("Do you want to create?")) {
                        UserCreationAPI.create({user: $scope.user}, function (data) {
                            // Success
                            $location.path('/user');
                        }, function (error) {
                            // Error
                            $scope.has_error = true;
                            $scope.errors = error.data.message;
                        });
                    }
                } else {
                    alert("Please enter new user information");
                }
            };

            $scope.cancel = function (state) {
                if (state == true) {
                    if (confirm("Form changed. Do you want to discard changes?")) {
                        $location.path('/user');
                    }
                } else {
                    $location.path('/user');
                }
            };
        }
    ]) // DONE USER CONTROLLERS
    .controller('PlaceCtrl', ['$scope', 'PlacesAPI', 'PlaceAPI', '$location',
        function ($scope, PlacesAPI, PlaceAPI, $location) {
            $scope.main_place_page = true;

            $scope.editPlace = function (placeId) {
                $location.path('/place-detail/' + placeId);
            };

            $scope.deletePlace = function (placeId) {
                if (confirm("Do you want to delete this place?")) {
                    PlaceAPI.delete({ id: placeId }, function (data) {
                        // Success
                        PlacesAPI.query(function (data2) {
                            $scope.places = data2["data"];
                        });
                    }, function (error) {
                        // Error
                        $scope.has_error = true;
                        $scope.errors = error.data.message;
                    });
                }
            };

            $scope.createPlace = function () {
                $location.path('/place-creation');
            };

            PlacesAPI.query({}, function (value, headers) {
                // Success
                $scope.places = value["data"];

                var res_headers = headers();

                $scope.max_size = 5;
                $scope.total_page = parseInt(res_headers["x-total-pages"]);
                $scope.total_items = parseInt(res_headers["x-total"]);
                $scope.current_page = parseInt(res_headers["x-page"]);

                $scope.$watch('current_page', function(newPage){
                    if ($scope.current_page > 0)
                        changePage(newPage);
                });
            }, function (response) {
                // Error
            });

            var changePage = function(page) {
                PlacesAPI.query({page: page}, function (value, headers) {
                    // Success
                    $scope.places = value["data"];
                }, function (response) {
                    // Error
                });
            }
        }
    ])
    .controller('PlaceDetailCtrl', ['$scope', '$routeParams', 'PlaceAPI', 'DistrictAPI', '$location',
        function ($scope, $routeParams, PlaceAPI, $location, DistrictAPI) {
            var place = PlaceAPI.show({id: $routeParams.id}, function () {
                $scope.place = place["data"];
                // GET OTHER PLACE INFO
                var district_id = $scope.place.district.id;
                var city_id = $scope.place.district.city_id;
            });
            $scope.form_state = false;

            $scope.updatePlace = function (id, state) {
                if (state == true) {
                    if (confirm("Do you want to update?")) {
                        var current_info = $scope.place;
                        PlaceAPI.update(current_info, function (data) {
                            // Success
                            $location.path('/place');
                        }, function (error) {
                            // Error
                            $scope.has_error = true;
                            $scope.errors = error.data.message;
                        });
                    }
                } else {
                    alert("Place info isn't changed");
                }
            };

            $scope.cancel = function (state) {
                if (state == true) {
                    if (confirm("Form changed. Do you want to discard changes?")) {
                        $location.path('/place');
                    }
                } else {
                    $location.path('/place');
                }
            };
        }
    ])
    .controller('PlaceCreationCtrl', ['$scope', 'UserCreationAPI', '$location',
        function ($scope, PlacesAPI, $location) {

            $scope.createPlace = function (state) {
                if (state == true) {
                    if (confirm("Do you want to create?")) {
                        PlacesAPI.create({place: $scope.place}, function (data) {
                            // Success
                            $location.path('/place');
                        }, function (error) {
                            // Error
                            $scope.has_error = true;
                            $scope.errors = error.data.message;
                        });
                    }
                } else {
                    alert("Please enter new place information");
                }
            };

            $scope.cancel = function (state) {
                if (state == true) {
                    if (confirm("Form changed. Do you want to discard changes?")) {
                        $location.path('/place');
                    }
                } else {
                    $location.path('/place');
                }
            };
        }
    ])
    .controller('PlaceSearchCtrl', ['$scope', 'UsersAPI', 'UserAPI', 'UserSearchAPI', '$location',
        function ($scope, UsersAPI, UserAPI, UserSearchAPI, $location) {
            $scope.main_place_page = false;
            $scope.search_place_page = true;
            $scope.places = {};

            $scope.listPlace = function() {
                $location.path('/place');
            };

            $scope.editPlace = function (placeId) {
                $location.path('/place-detail/' + placeId);
            };

            $scope.deleteUser = function (placeId) {
                if (confirm("Do you want to delete this place?")) {
                    UserAPI.delete({ id: placeId }, function (data) {
                        // Success
                        UsersAPI.query(function (data2) {
                            $scope.places = data2["data"];
                        });
                    }, function (error) {
                        // Error
                        $scope.has_error = true;
                        $scope.errors = error.data.message;
                    });
                }
            };

            $scope.searchPlace = function(keyword) {
                keyword = keyword == undefined ? '*':keyword;
                UserSearchAPI.query({keyword: keyword}, function (value, headers) {
                    // Success
                    $scope.places = value["data"];

                    var res_headers = headers();
                    $scope.max_size = 5;
                    $scope.total_page = parseInt(res_headers["x-total-pages"]) || 0;
                    $scope.total_items = parseInt(res_headers["x-total"]) || 0;
                    $scope.current_page = parseInt(res_headers["x-page"]) || 0;

                    $scope.$watch('current_page', function(newPage){
                        if ($scope.current_page > 0)
                            changePage(newPage, keyword);
                    });
                }, function (response) {
                    // Error
                });
            };

            var changePage = function(page, keyword) {
                UserSearchAPI.query({keyword: keyword, page: page}, function (value, headers) {
                    // Success
                    $scope.places = value["data"];
                }, function (response) {
                    // Error
                });
            }
        }
    ])//DONE PLACE CONTROLLERS
    .controller('FeedbackCtrl', [
        function ($scope) {
        }
    ])
    .controller('ReportCtrl', [
        function ($scope) {
        }
    ])
    .controller('QuestionCtrl', [
        function ($scope) {
        }
    ])
    .controller('AnswerCtrl', [
        function ($scope) {
        }
    ]);